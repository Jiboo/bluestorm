class Game
!!!140802.java!!!	Game(inout con : Bluestorm)
        super(con);
        activity = con;

        setOrientation(LinearLayout.HORIZONTAL);
        setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));

        cycleClaw = new Button(con);
        cycleClaw.setText("Claw");
        cycleClaw.setOnClickListener(this);

        disconnect = new Button(con);
        disconnect.setText("Disconnect");
        disconnect.setOnClickListener(this);

        tone = new Button(con);
        tone.setText("Beep");
        tone.setOnClickListener(this);

        song = new Button(con);
        song.setText("Song");
        song.setOnClickListener(this);

        battery = new ProgressBar(con, null, android.R.attr.progressBarStyleHorizontal);

        addView(cycleClaw);
        addView(disconnect);
        addView(tone);
        addView(song);
        addView(battery);
!!!140930.java!!!	start() : void
        updateThread = new Thread() {
            @Override
            public void run() {
                try {
                    while(true)
                    {
                        battery.setProgress((int)(activity.getNxt().getBatteryLevel() * 100));
                        // Mettre a jour les autres capteurs
                        sleep(500);
                    }
                }
                catch(Exception e) {
                    Log.d("bluestorm", "Caught in game update thread", e);
                }
            }
        };
        updateThread.start();
!!!141058.java!!!	finalize() : void
      updateThread.stop();
      super.finalize(); //not necessary if extending Object.
!!!141186.java!!!	onClick(inout arg : View) : void
        try {
            if(arg == cycleClaw) {
                if(clawState)
                    activity.getNxt().closeClaw();
                else
                    activity.getNxt().openClaw();
                clawState = !clawState;
            }
            else if(arg == disconnect) {
                activity.stop();
            }
            else if(arg == tone) {
                activity.getNxt().emitTone(400, 1000);
            }
            else if(arg == song) {
                Partition.jinglebells.play(activity.getNxt());
            }
        }
        catch(Exception e) {
            Log.e("bluestorm", "Error while cycling claw", e);
            activity.alert(e.getMessage());
        }
